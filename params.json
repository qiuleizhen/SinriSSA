{"name":"SinriSSA","tagline":"SINRI Slow Sql Log Analyzer for MySQL","body":"# SinriSSA\r\nSINRI Slow Sql log Analyzer\r\n\r\n## Background\r\nDo you have a large slow sql log file needing analyzing?\r\n\r\nEven it has been too large that beyond the ability of the common script, such as `myprofi`?\r\n\r\nYes SinriSSA is designed for such bad situation. \r\n\r\nAnyway, it of course has limitations based on your hardware and software conditions.\r\n\r\n## USAGE\r\n\r\n*  php SinriSSA.php [-eE] [-s SORT=ave_time] [-v MIN,MAX] [-t TOP=10] -f FILE\r\n*  -e show one sample sql\r\n*  -E show all sample sqls\r\n*  -f determine the log file, non-optional\r\n*  -s determine the sort method, `ave_time` and `freq_sum` supported\r\n*  -t the number of sqls to be displayed by order after sorting, 10 for default, 0 for all\r\n*  -v sql average time range filter, such as `100,10000`, used as [100,10000)\r\n \r\n## Sample\r\n\r\n    php SinriSSA.php -f mysql-slow.log -v 100,150 -s ave_time -t 3 -e\r\n\r\n\r\nThe above command would be executed as following:\r\n\r\n1. read file `mysql-slow.log` and find out all sql records;\r\n1. group the sqls with their normalized format, for simple, use md5 for each as unique key;\r\n1. compute average time for each normailized sql format group;\r\n1. filter the group according the range setting;\r\n1. sort according to the settings, and filter the tail;\r\n1. display the result.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}